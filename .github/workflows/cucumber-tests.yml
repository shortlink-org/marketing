name: Cucumber BDD Tests

on:
  schedule:
    # Run cucumber tests daily at 6 AM UTC
    - cron: '0 6 * * *'
  workflow_dispatch:
    inputs:
      test_type:
        description: 'Type of cucumber tests to run'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - simple
          - expressions
      environment:
        description: 'Environment to test against'
        required: true
        default: 'local'
        type: choice
        options:
          - local
          - staging
          - production

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: full

jobs:
  cucumber-tests:
    name: Run Cucumber Tests
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: newsletter_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    strategy:
      matrix:
        test-suite:
          - name: "Basic Cucumber Tests"
            command: "cargo test --test cucumber_simple"
            condition: ${{ github.event.inputs.test_type == 'all' || github.event.inputs.test_type == 'simple' || github.event_name == 'schedule' }}
          - name: "Cucumber Expressions Tests"
            command: "cargo test --test cucumber_expressions"
            condition: ${{ github.event.inputs.test_type == 'all' || github.event.inputs.test_type == 'expressions' || github.event_name == 'schedule' }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: 1.82

    - name: Cache Cargo dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          newsletter/target/
        key: ${{ runner.os }}-cargo-cucumber-${{ hashFiles('newsletter/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-cucumber-
          ${{ runner.os }}-cargo-

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libpq-dev protobuf-compiler

    - name: Wait for PostgreSQL
      run: |
        timeout 60s bash -c 'until pg_isready -h localhost -p 5432; do sleep 2; done'

    - name: Set up test environment
      working-directory: ./newsletter
      run: |
        echo "Setting up test environment for ${{ github.event.inputs.environment || 'local' }}"
        # Add any environment-specific setup here

    - name: Run ${{ matrix.test-suite.name }}
      if: ${{ matrix.test-suite.condition }}
      working-directory: ./newsletter
      run: ${{ matrix.test-suite.command }}
      env:
        DATABASE_URL: postgres://postgres:postgres@localhost:5432/newsletter_test
        RUST_LOG: debug

    - name: Generate test report
      if: always()
      working-directory: ./newsletter
      run: |
        cargo test --test cucumber_simple --test cucumber_expressions -- --format json > cucumber-results.json || true
      env:
        DATABASE_URL: postgres://postgres:postgres@localhost:5432/newsletter_test

    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: cucumber-test-results-${{ github.run_id }}
        path: |
          newsletter/cucumber-results.json
          newsletter/target/debug/deps/cucumber_*
        retention-days: 7

    - name: Post test summary
      if: always()
      run: |
        echo "## Cucumber Test Results ðŸ¥’" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Test Configuration" >> $GITHUB_STEP_SUMMARY
        echo "- **Test Type**: ${{ github.event.inputs.test_type || 'all (scheduled)' }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Environment**: ${{ github.event.inputs.environment || 'local' }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Rust Version**: 1.89" >> $GITHUB_STEP_SUMMARY
        echo "- **Database**: PostgreSQL 15" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Features Tested" >> $GITHUB_STEP_SUMMARY
        echo "- âœ… Newsletter CRUD Operations" >> $GITHUB_STEP_SUMMARY
        echo "- âœ… Cucumber Expressions with Parameter Types" >> $GITHUB_STEP_SUMMARY
        echo "- âœ… Bulk Operations and Domain Filtering" >> $GITHUB_STEP_SUMMARY
        echo "- âœ… Email Validation and Edge Cases" >> $GITHUB_STEP_SUMMARY
        echo "- âœ… Complex Multi-step Workflows" >> $GITHUB_STEP_SUMMARY

  notify-on-failure:
    name: Notify on Test Failure
    runs-on: ubuntu-latest
    needs: cucumber-tests
    if: failure() && github.event_name == 'schedule'

    steps:
    - name: Create issue on test failure
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: 'ðŸš¨ Scheduled Cucumber Tests Failed',
            body: `
              ## Scheduled Cucumber Test Failure
              
              The scheduled cucumber tests failed on ${new Date().toISOString()}.
              
              **Details:**
              - **Workflow**: ${context.workflow}
              - **Run ID**: ${context.runId}
              - **Commit**: ${context.sha}
              
              **Action Required:**
              Please investigate the test failures and fix any issues.
              
              **Links:**
              - [Failed Workflow Run](${context.payload.repository.html_url}/actions/runs/${context.runId})
              - [Newsletter Service](${context.payload.repository.html_url}/tree/main/newsletter)
              
              ---
              *This issue was automatically created by the cucumber-tests workflow.*
            `,
            labels: ['bug', 'testing', 'cucumber', 'newsletter']
          })